// { + Рудь Д.А. Акт списания МПЗ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктСписанияМПЗ";
	КомандаПечати.Представление = НСтр("ru = 'Акт списания МПЗ, непригодных к использованию (ПУЗ.11)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок       = 110;
// }

// { + Рудь Д.А. Проверяем, нужно ли для макета АктСписанияМПЗ формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктСписанияМПЗ") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктСписанияМПЗ", "Акт списания МПЗ, непригодных к использованию (ПУЗ.11)", 
		ПечатьАктСписанияМПЗ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати), , "Документ.СписаниеТоваров.ПФ_MXL_АктСписанияМПЗ");
	КонецЕсли;
// }

// { + Рудь Д.А.
Функция ПечатьАктСписанияМПЗ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеТоваров_АктСписанияМПЗ";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписаниеТоваров.Ссылка КАК Ссылка,
		|	СписаниеТоваров.Дата КАК ДатаДокумента,
		|	СписаниеТоваров.Номер КАК НомерДокумента,
		|	СписаниеТоваров.Организация КАК Организация,
		|	СписаниеТоваров.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	СписаниеТоваров.Ответственный КАК Ответственный,
		|	СписаниеТоваровТовары.Номенклатура КАК Номенклатура,
		|	СписаниеТоваровТовары.Номенклатура.Код КАК НоменклатураКод,
		|	СписаниеТоваровТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СписаниеТоваровТовары.Количество КАК Количество,
		|	СписаниеТоваровТовары.Цена КАК Цена,
		|	ЕСТЬNULL(СписаниеТоваровТовары.Количество * СписаниеТоваровТовары.Цена, 0) КАК Сумма,
		|	СписаниеТоваров.Основание КАК Основание,
		|	СписаниеТоваровТовары.СчетУчета КАК СчетУчета
		|ИЗ
		|	Документ.СписаниеТоваров КАК СписаниеТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров.Товары КАК СписаниеТоваровТовары
		|		ПО СписаниеТоваров.Ссылка = СписаниеТоваровТовары.Ссылка
		|ГДЕ
		|	СписаниеТоваров.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Определение количества строк в документах
	КоличествоСтрокДокумента = Новый Соответствие;
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		КоличествоСтрок = 0;
		Пока Выборка.Следующий() Цикл
			Если Выборка.Номенклатура <> Null Тогда 
				КоличествоСтрок = КоличествоСтрок + 1;
			КонецЕсли;
		КонецЦикла;
		КоличествоСтрокДокумента.Вставить(Выборка.Ссылка, КоличествоСтрок);
	КонецЦикла;
	Выборка.Сбросить();
	
	ПервыйДокумент = Истина;
	
	// Выбираем очередной документ по реквизиту "Ссылка"
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеТоваров.ПФ_MXL_АктСписанияМПЗ");
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;   
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		ОбластьШапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.НомерДокумента, Истина, Ложь);
		ОбластьШапка.Параметры.ДатаДокумента = Формат(Выборка.ДатаДокумента, "ДЛФ=DD");
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация);
		ОбластьШапка.Параметры.Организация = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
		ОбластьШапка.Параметры.ПодразделениеОрганизации = Выборка.ПодразделениеОрганизации;
		ОбластьШапка.Параметры.Ответственный = Выборка.Ответственный;
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ОбластьШапкиТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьШапкиТаблицы);
		
		ТекущаяСтрока = 0;
		КоличествоСтрок = КоличествоСтрокДокумента.Получить(Выборка.Ссылка);
		
		ИтогоКоличество = 0;
		ИтогоСумма = 0;
		
		ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ОбластьИтого = Макет.ПолучитьОбласть("Итого");
		ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
		
		// Массив для проверки вывода без переноса
		СтрокаСИтогом = Новый Массив; 
		СтрокаСИтогом.Добавить(ОбластьСтрокаТаблицы);
		СтрокаСИтогом.Добавить(ОбластьИтого);
		СтрокаСИтогом.Добавить(ОбластьПодвалТаблицы); 
		
		Пока Выборка.Следующий() Цикл
			
			ТекущаяСтрока = ТекущаяСтрока + 1;
			
			// Проверка на возможность вывода без переноса на следующий лист
			Если Не ТабличныйДокумент.ПроверитьВывод(СтрокаСИтогом) Тогда
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапкиТаблицы);
				
			КонецЕсли;
			
			// Проверка перед выводом последней строки
			Если ТекущаяСтрока = КоличествоСтрок Тогда
				
				Если Не ТабличныйДокумент.ПроверитьВывод(СтрокаСИтогом) Тогда
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ОбластьШапкиТаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ИтогоКоличество = ИтогоКоличество + ?(ЗначениеЗаполнено(Выборка.Количество), Выборка.Количество, 0);
			ИтогоСумма = ИтогоСумма + ?(ЗначениеЗаполнено(Выборка.Сумма), Выборка.Сумма, 0);
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(Выборка);
			ОбластьСтрокаТаблицы.Параметры.НомерСтроки = ТекущаяСтрока;
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
		КонецЦикла;
		
		ОбластьИтого.Параметры.ИтогоКоличество = ИтогоКоличество;
		ОбластьИтого.Параметры.ИтогоСумма = ИтогоСумма;
		
		ТабличныйДокумент.Вывести(ОбластьИтого);
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
		
		ОбластьШапка2 = Макет.ПолучитьОбласть("Шапка2");
		ОбластьШапкаТаблицы2 = Макет.ПолучитьОбласть("ШапкаТаблицы2");
		ОбластьСтрокаТаблицы2 = Макет.ПолучитьОбласть("СтрокаТаблицы2");
		ОбластьПодвалТаблицы2 = Макет.ПолучитьОбласть("ПодвалТаблицы2");
		
		// Массив для проверки вывода без переноса
		ШапкаСоСтрокой = Новый Массив; 
		ШапкаСоСтрокой.Добавить(ОбластьШапка2);
		ШапкаСоСтрокой.Добавить(ОбластьШапкаТаблицы2);
		ШапкаСоСтрокой.Добавить(ОбластьСтрокаТаблицы2);
		
		// Массив для проверки вывода без переноса
		СтрокаСПодвалом = Новый Массив; 
		СтрокаСПодвалом.Добавить(ОбластьСтрокаТаблицы2);
		СтрокаСПодвалом.Добавить(ОбластьПодвалТаблицы);
		
		ТекущаяСтрока = 1;
		КоличествоСтрок = 10;
		
		Если Не ТабличныйДокумент.ПроверитьВывод(ШапкаСоСтрокой) Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОбластьШапка2);
			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы2);
			
		Иначе 
			
			ТабличныйДокумент.Вывести(ОбластьШапка2);
			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы2);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы2);
			
		КонецЕсли;
		
		// Вывод раздела 2
		Пока ТекущаяСтрока < КоличествоСтрок Цикл
			
			// Проверка на возможность вывода без переноса на следующий лист
			Если Не ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы2);
				
			КонецЕсли;
			
			// Проверка перед выводом последней строки
			Если ТекущаяСтрока = КоличествоСтрок Тогда
				
				Если Не ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
					
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы2);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы2);
			
			ТекущаяСтрока = ТекущаяСтрока + 1;
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы2);
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	
	Возврат ТабличныйДокумент; 
	
КонецФункции
// }
