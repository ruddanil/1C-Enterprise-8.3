// ФормаОтчета

&НаКлиенте
Процедура Сформировать(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ТабличныйДокумент = СформироватьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьНаСервере()
	
	МодульОбъекта = РеквизитФормыВЗначение("Отчет");
	Возврат МодульОбъекта.СформироватьОтчет();
	
КонецФункции

&НаКлиенте
Процедура ОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	// Формируем список выбора типов для установки реквизита "Объект"
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(Тип("СправочникСсылка.Номенклатура"), "Оборудование к установке");
	СписокВыбора.Добавить(Тип("СправочникСсылка.ОбъектыСтроительства"), "Объект строительства");
	
	СписокВыбора.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ОбъектОбработатьВыборТипа", ЭтотОбъект), "Выберите тип объекта");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектОбработатьВыборТипа(ВыбранныйОбъект, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйОбъект = Неопределено Тогда 
        Возврат;
    КонецЕсли;
	
	// Вызываем форму выбора объекта с необходимым отбором
	Если ВыбранныйОбъект.Значение = Тип("СправочникСсылка.Номенклатура") Тогда

		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ВидНоменклатуры", фд_РаботаСПредопределеннымиПризнакамиВызовСервера.ПолучитьЭлементПоПризнаку("ОборудованиеКУстановке"));
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", ПараметрыОтбора);
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбъектПриЗакрытииФормыВыбора", ЭтотОбъект);
		
		ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли ВыбранныйОбъект.Значение = Тип("СправочникСсылка.ОбъектыСтроительства") Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбъектПриЗакрытииФормыВыбора", ЭтотОбъект);
		
		ОткрытьФорму("Справочник.ОбъектыСтроительства.ФормаВыбора", , ЭтотОбъект, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПриЗакрытииФормыВыбора(Значение, ДопПараметры) Экспорт

	Если Значение = Неопределено Тогда 
		Возврат; 
	КонецЕсли; 
	
	Отчет.Объект = Значение;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если Элементы.ТабличныйДокумент.Защита Тогда
		Возврат;
	КонецЕсли;
	
	// Обрабатываем изменение ячеек табличного документа
	Если СтрЧислоВхождений(Область.Имя, "Материал") = 1 И Область.Текст = "" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		// Вызываем форму выбора справочника "Номенклатура" с необходимым отбором
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ВидНоменклатуры", фд_РаботаСПредопределеннымиПризнакамиВызовСервера.ПолучитьЭлементПоПризнаку("ДрагоценныеМеталлы"));
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", ПараметрыОтбора);
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("МатериалПриЗакрытииФормыВыбора", ЭтотОбъект, Область.Имя);
		
		ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "Материал") = 1 И Область.Текст <> "" Тогда
		
		// Очищаем области при повторной попытке изменения
		Область.Текст = "";
		ТабличныйДокумент.Область("Код" + СтрЗаменить(Область.Имя, "Материал", "")).Текст = "";
		ТабличныйДокумент.Область("ЕдиницаИзмерения" + СтрЗаменить(Область.Имя, "Материал", "")).Текст = "";

		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалПриЗакрытииФормыВыбора(Значение, ДопПараметры) Экспорт
	
	Если Значение = Неопределено Тогда 
		Возврат; 
	КонецЕсли; 
	
	Если СтрЧислоВхождений(ДопПараметры, "Материал") = 1 Тогда
		
		Область = ТабличныйДокумент.Область(ДопПараметры);
		Область.Текст = Значение;
		
		ИндексМатериала = СтрЗаменить(Область.Имя, "Материал", "");
		ОбластьКодМатериала = ТабличныйДокумент.Область("Код" + ИндексМатериала);
		ОбластьЕдиницаИзмеренияМатериала = ТабличныйДокумент.Область("ЕдиницаИзмерения" + ИндексМатериала);
		
		ДанныеМатериала = ПолучитьДанныеМатериала(Значение);
		
		ОбластьКодМатериала.Текст = ДанныеМатериала[0].Код;
		ОбластьЕдиницаИзмеренияМатериала.Текст = ДанныеМатериала[0].ЕдиницаИзмерения;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриИзмененииСодержимогоОбласти(Элемент, Область, ДопПараметры)
	
	Если СтрЧислоВхождений(Область.Имя, "Материал") = 1 И Область.Текст <> "" Тогда
		
		ИндексМатериала = СтрЗаменить(Область.Имя, "Материал", "");
		
		Область.Текст = "";
		ТабличныйДокумент.Область("Код" + ИндексМатериала).Текст = "";
		ТабличныйДокумент.Область("ЕдиницаИзмерения" + ИндексМатериала).Текст = "";
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеМатериала(Ссылка)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Код КАК Код,
		|	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Следующий() Тогда
		
		Результат = Новый Массив;
		Строка = Новый Структура;
		Строка.Вставить("Код", РезультатЗапроса.Получить(0));
		Строка.Вставить("ЕдиницаИзмерения", РезультатЗапроса.Получить(1));
		Результат.Добавить(Строка);
		
		Возврат Результат;
		
	КонецЕсли;
	
КонецФункции

// Модуль объекта (отчета)

Функция СформироватьОтчет()	Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("Макет");
	ОбластьШапка1 = Макет.ПолучитьОбласть("Шапка1");
	ОбластьСтрока1 = Макет.ПолучитьОбласть("Строка1");
	ОбластьШапка2 = Макет.ПолучитьОбласть("Шапка2");
	ОбластьСтрока2 = Макет.ПолучитьОбласть("Строка2");
	ОбластьШапка3 = Макет.ПолучитьОбласть("Шапка3");
	ОбластьСтрока3 = Макет.ПолучитьОбласть("Строка3");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК НаименованиеОбъекта,
		|	ХозрасчетныйОборотыДтКт.ПодразделениеКт КАК Подразделение,
		|	ХозрасчетныйОборотыДтКт.Регистратор.Номер КАК НомерОперации,
		|	ХозрасчетныйОборотыДтКт.Регистратор.Дата КАК ДатаОперации,
		|	ХозрасчетныйОборотыДтКт.СубконтоКт1.Код КАК КодОбъекта,
		|	ХозрасчетныйОборотыДтКт.Регистратор.фд_СодержаниеОперации КАК СодержаниеОперации
		|ПОМЕСТИТЬ ВТОборотОбъекта
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(, , Регистратор, НЕ СчетДт В ИЕРАРХИИ (&СчетДтИсключающий), , СчетКт В ИЕРАРХИИ (&СчетКт), , СубконтоКт1 = &Объект) КАК ХозрасчетныйОборотыДтКт
		|ГДЕ
		|	ХозрасчетныйОборотыДтКт.Регистратор.Организация = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВТОборотОбъекта.Подразделение КАК Подразделение,
		|	ВТОборотОбъекта.НомерОперации КАК НомерОперации,
		|	ВТОборотОбъекта.ДатаОперации КАК ДатаОперации,
		|	ВТОборотОбъекта.НаименованиеОбъекта КАК НаименованиеОбъекта,
		|	ВТОборотОбъекта.КодОбъекта КАК КодОбъекта,
		|	ХозрасчетныйОстаткиИОбороты.Период КАК ДатаПринятия,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК Стоимость,
		|	ВТОборотОбъекта.СодержаниеОперации КАК СодержаниеОперации,
		|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо КАК ГлавныйБухгалтер
		|ИЗ
		|	ВТОборотОбъекта КАК ВТОборотОбъекта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(, , Запись, , Счет В ИЕРАРХИИ (&СчетКт), , Субконто1 = &Объект) КАК ХозрасчетныйОстаткиИОбороты
		|		ПО ВТОборотОбъекта.НаименованиеОбъекта = ХозрасчетныйОстаткиИОбороты.Субконто1,
		|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(, Должность = &Должность) КАК ОтветственныеЛицаОрганизацийСрезПоследних";
	

	Если ТипЗнч(Объект) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		СчетДтИсключающий = Новый СписокЗначений;
		СчетДтИсключающий.Добавить(ПланыСчетов.Хозрасчетный.ОсновныеСредства);
		СчетДтИсключающий.Добавить(ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы);
		СчетДтИсключающий.Добавить(ПланыСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты);
		
		СчетКт = ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке;
		
	Иначе 
		
		СчетДтИсключающий = Новый СписокЗначений;
		СчетДтИсключающий.Добавить(ПланыСчетов.Хозрасчетный.ОсновныеСредства);
		СчетДтИсключающий.Добавить(ПланыСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты);
		
		СчетКт = ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы;
		
	КонецЕсли;
	
	Должность = фд_РаботаСПредопределеннымиПризнакамиВызовСервера.ПолучитьЭлементПоПризнаку("ГлавныйБухгалтер");
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Объект", Объект);
	Запрос.УстановитьПараметр("СчетДтИсключающий", СчетДтИсключающий);
	Запрос.УстановитьПараметр("СчетКт", СчетКт);
	Запрос.УстановитьПараметр("Должность", Должность);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Следующий() Тогда
	
		ОбластьШапка1.Параметры.Организация = Организация;
		ОбластьШапка1.Параметры.ДатаФормирования = ТекущаяДата();
		ОбластьШапка1.Параметры.Заполнить(РезультатЗапроса);
		ОбластьСтрока1.Параметры.Заполнить(РезультатЗапроса);
		ОбластьПодвал.Параметры.Заполнить(РезультатЗапроса);
		
		ТабличныйДокумент.Вывести(ОбластьШапка1);
		ТабличныйДокумент.Вывести(ОбластьСтрока1);
		ТабличныйДокумент.Вывести(ОбластьШапка2);
		ТабличныйДокумент.Вывести(ОбластьСтрока2);
		ТабличныйДокумент.Вывести(ОбластьШапка3);
		ТабличныйДокумент.Вывести(ОбластьСтрока3);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
	
		ТабличныйДокумент.АвтоМасштаб = Истина;
		
		Возврат ТабличныйДокумент;
		
	Иначе 
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Для данного объекта не найден кредитовый оборот";
		Сообщение.Поле = "Оборот"; 
		Сообщение.УстановитьДанные(Объект); 
		Сообщение.Сообщить();
		
	КонецЕсли; 
	
КонецФункции

