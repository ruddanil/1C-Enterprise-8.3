// { + Рудь Д.А. MX1
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "MX1";
	КомандаПечати.Представление = НСтр("ru = 'Акт о приеме-передаче ТМЦ на ответственное хранение (МХ-1)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок       = 160;
// }

// { + Рудь Д.А.	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "MX1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "MX1", 
			"Акт о приеме-передаче ТМЦ на ответственное хранение (МХ-1)", ПечатьMX1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,
			"Документ.ПоступлениеТоваровУслуг.ПФ_MXL_MX1");
	КонецЕсли;
// }

// { + Рудь Д.А
Функция ПечатьMX1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваровУслуг_MX1";

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("СчетУчета", ПланыСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
		|	ПоступлениеТоваровУслуг.Дата КАК ДатаДокумента,
		|	ПоступлениеТоваровУслуг.Организация КАК Организация,
		|	ПоступлениеТоваровУслуг.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|	ПоступлениеТоваровУслуг.Контрагент КАК Контрагент,
		|	ПоступлениеТоваровУслугТовары.Количество КАК Количество,
		|	ПоступлениеТоваровУслугТовары.Цена КАК Цена,
		|	ПоступлениеТоваровУслугТовары.Сумма КАК Сумма,
		|	ПоступлениеТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ПоступлениеТоваровУслуг.Номер КАК НомерДокумента,
		|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	ПоступлениеТоваровУслуг.Склад КАК Склад,
		|	ПоступлениеТоваровУслуг.ДоговорКонтрагента.Номер КАК ДоговорНомер,
		|	ПоступлениеТоваровУслуг.ДоговорКонтрагента.Дата КАК ДоговорДата,
		|	ПоступлениеТоваровУслугТовары.Номенклатура.Код КАК НоменклатураКод,
		|	ПоступлениеТоваровУслугТовары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
		|	ПоступлениеТоваровУслугТовары.СчетУчета КАК СчетУчета,
		|	ПоступлениеТоваровУслуг.Комментарий КАК Комментарий,
		|	ПоступлениеТоваровУслугТовары.Номенклатура.Комментарий КАК НоменклатураКомментарий
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		|		ПО ПоступлениеТоваровУслуг.Ссылка = ПоступлениеТоваровУслугТовары.Ссылка
		|ГДЕ
		|	ПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
		|	И ПоступлениеТоваровУслугТовары.СчетУчета = &СчетУчета";
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	
	// Определение количества строк в документах.
	КоличествоСтрокДокумента = Новый Соответствие;
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		КоличествоСтрок = 0;
		Пока Выборка.Следующий() Цикл
			Если Выборка.Номенклатура <> Null Тогда 
				КоличествоСтрок = КоличествоСтрок + 1;
			КонецЕсли;
		КонецЦикла;
		КоличествоСтрокДокумента.Вставить(Выборка.Ссылка, КоличествоСтрок);
	КонецЦикла;
	Выборка.Сбросить();
	
	ПервыйДокумент = Истина;
	
	
	// Выбираем очередной документ по реквизиту "Ссылка"
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПоступлениеТоваровУслуг.ПФ_MXL_MX1");
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;   
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация);
		ОбластьШапка.Параметры.Организация = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,ЮридическийАдрес,ТелефонЮридическогоАдреса,Факс");
		ОбластьШапка.Параметры.ПодразделениеОрганизации = Выборка.ПодразделениеОрганизации; 
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Контрагент);
		ОбластьШапка.Параметры.Контрагент = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,ЮридическийАдрес,ТелефонЮридическогоАдреса,Факс");
		ОбластьШапка.Параметры.ДоговорНомер = Выборка.ДоговорНомер;	
		ОбластьШапка.Параметры.ДоговорДата = Формат(Выборка.ДоговорДата, "ДЛФ=DD");
		ОбластьШапка.Параметры.ДатаДокумента = Формат(Выборка.ДатаДокумента, "ДЛФ=DD");	
		ОбластьШапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.НомерДокумента, Истина, Ложь);	
		ОбластьШапка.Параметры.Склад = Выборка.Склад;
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ОбластьШапкиТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьШапкиТаблицы);
		
		ТекущаяСтрока = 0;
		КоличествоСтрок = КоличествоСтрокДокумента.Получить(Выборка.Ссылка);
		
		ИтогоКоличествоПоСтранице = 0;
		ИтогоСтоимостьПоСтранице = 0;
		ИтогоКоличество = 0;
		ИтогоСтоимость = 0;
		
		ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
		ОбластьИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьИтого = Макет.ПолучитьОбласть("Итого");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		// Массив для проверки вывода итогов по странице
		СтрокаСИтогом = Новый Массив; 
		СтрокаСИтогом.Добавить(ОбластьСтрокаТаблицы);
		СтрокаСИтогом.Добавить(ОбластьИтогоПоСтранице); 
		
		// Массив для проверки вывода итогов с подвалом
		СтрокаСПодвалом = Новый Массив;
		СтрокаСИтогом.Добавить(ОбластьСтрокаТаблицы);
		СтрокаСПодвалом.Добавить(ОбластьИтогоПоСтранице); 
		СтрокаСПодвалом.Добавить(ОбластьИтого); 
		СтрокаСПодвалом.Добавить(ОбластьПодвал); 

		Пока Выборка.Следующий() Цикл
			
			ТекущаяСтрока = ТекущаяСтрока + 1;
			
			// Проверка на возможность вывода Строка+ИтогПоСтранице без переноса на следующий лист
			Если Не ТабличныйДокумент.ПроверитьВывод(СтрокаСИтогом) Тогда
				
				ОбластьИтогоПоСтранице.Параметры.ИтогоКоличествоПоСтранице = ИтогоКоличествоПоСтранице;
				ОбластьИтогоПоСтранице.Параметры.ИтогоСтоимостьПоСтранице = ИтогоСтоимостьПоСтранице;
				ТабличныйДокумент.Вывести(ОбластьИтогоПоСтранице);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапкиТаблицы);
				ИтогоКоличествоПоСтранице = 0;
				ИтогоСтоимостьПоСтранице = 0;
			
			КонецЕсли;
			
			// Проверка перед выводом последней строки
			Если ТекущаяСтрока = КоличествоСтрок Тогда
			
				Если Не ТабличныйДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
				
					ОбластьИтогоПоСтранице.Параметры.ИтогоКоличествоПоСтранице = ИтогоКоличествоПоСтранице;
					ОбластьИтогоПоСтранице.Параметры.ИтогоСтоимостьПоСтранице = ИтогоСтоимостьПоСтранице;
					ТабличныйДокумент.Вывести(ОбластьИтогоПоСтранице);
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ОбластьШапкиТаблицы);
					ИтогоКоличествоПоСтранице = 0;
					ИтогоСтоимостьПоСтранице = 0;
				
				КонецЕсли;
			
			КонецЕсли;
			
			ИтогоКоличествоПоСтранице = ИтогоКоличествоПоСтранице + ?(ЗначениеЗаполнено(Выборка.Количество), Выборка.Количество, 0);
			ИтогоСтоимостьПоСтранице = ИтогоСтоимостьПоСтранице + ?(ЗначениеЗаполнено(Выборка.Сумма), Выборка.Сумма, 0);
			ИтогоКоличество = ИтогоКоличество + ?(ЗначениеЗаполнено(Выборка.Количество), Выборка.Количество, 0);
			ИтогоСтоимость = ИтогоСтоимость + ?(ЗначениеЗаполнено(Выборка.Сумма), Выборка.Сумма, 0);
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(Выборка);
			ОбластьСтрокаТаблицы.Параметры.НомерСтроки = ТекущаяСтрока;
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
		КонецЦикла;
		
		ОбластьИтогоПоСтранице.Параметры.ИтогоКоличествоПоСтранице = ИтогоКоличествоПоСтранице;
		ОбластьИтогоПоСтранице.Параметры.ИтогоСтоимостьПоСтранице = ИтогоСтоимостьПоСтранице;
		
		ОбластьИтого.Параметры.ИтогоКоличество = ИтогоКоличество;
		ОбластьИтого.Параметры.ИтогоСтоимость = ИтогоСтоимость;
		
		ОбластьПодвал.Параметры.Заполнить(Выборка);
		
		ТабличныйДокумент.Вывести(ОбластьИтогоПоСтранице);
		ТабличныйДокумент.Вывести(ОбластьИтого);
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
	КонецЦикла;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	
	Возврат ТабличныйДокумент; 
	
КонецФункции	
// }
